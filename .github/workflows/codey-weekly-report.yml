# .github/workflows/codey-weekly-report.yml
name: 📊 Weekly Codey Report

on:
  schedule:
    # Jeden Sonntag um 18:00 UTC
    - cron: '0 18 * * 0'
  workflow_dispatch:

jobs:
  weekly-report:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    steps:
    - name: 🚀 Checkout
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📊 Generate Weekly Report
      run: |
        python scripts/weekly_report.py

    - name: 📝 Create Issue with Report
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const reportExists = fs.existsSync('codey-weekly-report.svg');
          
          if (reportExists) {
            const title = `📊 Codey Weekly Report - ${new Date().toLocaleDateString()}`;
            const body = `## 🐾 Dein wöchentlicher Codey Report!

![Weekly Report](https://github.com/${{ github.repository }}/blob/main/codey-weekly-report.svg)

### 📈 Diese Woche:
- Codey hat fleißig deine GitHub-Aktivität verfolgt
- Neue Achievements freigeschaltet? Schau in deinen Commits nach! 
- Vergiss nicht, Codey regelmäßig zu füttern 🍖

### 💡 Tipps für nächste Woche:
- Halte deine Commit-Serie am Laufen 🔥
- Merge ein paar Pull Requests für extra Glück 😊
- Schließe Issues für Codey's Wohlbefinden ✅

*Automatisch generiert von deinem Codey Bot 🤖*`;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['codey', 'weekly-report', 'automated']
            });
          }

    - name: 💾 Commit Weekly Report
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Codey Reporter 📊"
        
        if [[ -f "codey-weekly-report.svg" ]]; then
          git add codey-weekly-report.svg
          git commit -m "📊 Weekly Codey Report - $(date +'%Y-%m-%d')" || echo "No changes"
          git push || echo "Nothing to push"
        fi

---

# .github/workflows/codey-language-detection.yml
name: 🔍 Codey Language Evolution

on:
  push:
    branches: [ main ]
  schedule:
    # Täglich um 12:00 prüfen
    - cron: '0 12 * * *'

jobs:
  detect-languages:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: 🚀 Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Vollständige Historie für Analyse

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Install GitHub CLI
      run: |
        gh --version || (curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update && sudo apt install gh)

    - name: 🔍 Analyze Repository Languages
      run: |
        python scripts/language_analyzer.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 🎨 Update Evolution if Needed
      run: |
        python scripts/update_evolution.py

    - name: 💾 Commit Evolution Changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Codey Evolution 🧬"
        
        if [[ `git status --porcelain` ]]; then
          git add codey-data.json codey.svg
          git commit -m "🧬 Codey evolution update based on language usage"
          git push
        fi

---

# .github/workflows/codey-interaction.yml
name: 🎮 Codey Manual Interaction

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  handle-interaction:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.title, 'codey') || contains(github.event.comment.body, '/codey')
    permissions:
      contents: write
      issues: write

    steps:
    - name: 🚀 Checkout
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 🎮 Parse Command
      id: parse
      uses: actions/github-script@v7
      with:
        script: |
          const body = context.payload.comment?.body || context.payload.issue?.body || '';
          const commands = {
            '/codey status': 'status',
            '/codey feed': 'feed',
            '/codey pet': 'pet',
            '/codey heal': 'heal',
            '/codey stats': 'stats'
          };
          
          for (const [cmd, action] of Object.entries(commands)) {
            if (body.includes(cmd)) {
              core.setOutput('command', action);
              return;
            }
          }
          core.setOutput('command', 'unknown');

    - name: 🍖 Execute Codey Command
      if: steps.parse.outputs.command != 'unknown'
      run: |
        python scripts/manual_interaction.py "${{ steps.parse.outputs.command }}"

    - name: 💬 Respond to User
      uses: actions/github-script@v7
      with:
        script: |
          const command = '${{ steps.parse.outputs.command }}';
          const responses = {
            'status': '🐾 Hier ist Codey\'s aktueller Status! Schau dir das SVG in deinem Profil an.',
            'feed': '🍖 Codey wurde gefüttert! Seine Hunger-Werte steigen.',
            'pet': '😊 Du hast Codey gestreichelt! Er ist jetzt glücklicher.',
            'heal': '💚 Codey wurde geheilt und fühlt sich besser!',
            'stats': '📊 Hier sind Codey\'s detaillierte Statistiken!',
            'unknown': '❓ Unbekannter Befehl. Verfügbare Befehle: `/codey status`, `/codey feed`, `/codey pet`, `/codey heal`, `/codey stats`'
          };
          
          const response = responses[command] || responses['unknown'];
          
          const issueNumber = context.payload.issue?.number || context.payload.pull_request?.number;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            body: `${response}

![Codey Status](https://github.com/${{ github.repository }}/blob/main/codey.svg)

*Automatische Antwort vom Codey Bot 🤖*`
          });

---

# .github/workflows/codey-backup.yml
name: 💾 Codey Data Backup

on:
  schedule:
    # Täglich um 2:00 UTC backup
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  backup-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: 🚀 Checkout
      uses: actions/checkout@v4

    - name: 📅 Create Backup
      run: |
        mkdir -p backups
        DATE=$(date +%Y-%m-%d)
        
        # Backup aller wichtigen Dateien
        if [[ -f "codey-data.json" ]]; then
          cp codey-data.json "backups/codey-data-$DATE.json"
        fi
        
        if [[ -f "codey.svg" ]]; then
          cp codey.svg "backups/codey-$DATE.svg"
        fi
        
        # Cleanup alte Backups (behalte nur 30 Tage)
        find backups/ -name "codey-data-*.json" -mtime +30 -delete
        find backups/ -name "codey-*.svg" -mtime +30 -delete

    - name: 📊 Generate Backup Report
      run: |
        echo "# 💾 Codey Backup Report - $(date)" > backup-report.md
        echo "" >> backup-report.md
        echo "## Backup Status:" >> backup-report.md
        echo "- Date: $(date)" >> backup-report.md
        echo "- Files backed up: $(ls backups/ | wc -l)" >> backup-report.md
        echo "- Last backup size: $(du -h backups/ | tail -1)" >> backup-report.md
        echo "" >> backup-report.md
        echo "## Recent Backups:" >> backup-report.md
        ls -la backups/ | tail -10 >> backup-report.md

    - name: 💾 Commit Backup
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Codey Backup Bot 💾"
        
        if [[ `git status --porcelain` ]]; then
          git add backups/ backup-report.md
          git commit -m "💾 Daily backup - $(date +'%Y-%m-%d %H:%M')"
          git push
        else
          echo "No new backups to commit"
        fi

---

# .github/workflows/codey-analytics.yml
name: 📈 Codey Analytics Dashboard

on:
  schedule:
    # Wöchentlich am Montag um 9:00
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  generate-analytics:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write

    steps:
    - name: 🚀 Checkout
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Install Dependencies
      run: |
        pip install matplotlib seaborn pandas plotly

    - name: 📊 Generate Analytics
      run: |
        python scripts/generate_analytics.py

    - name: 📱 Create GitHub Pages
      run: |
        mkdir -p docs
        python scripts/create_dashboard.py

    - name: 🚀 Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
        commit_message: "📊 Update Codey Analytics Dashboard"

---

# .github/workflows/codey-social.yml  
name: 🐦 Codey Social Media

on:
  schedule:
    # Bei besonderen Achievements
    - cron: '0 15 * * *'  # 15:00 täglich prüfen
  workflow_dispatch:

jobs:
  social-update:
    runs-on: ubuntu-latest
    if: github.repository_owner == github.actor
    
    steps:
    - name: 🚀 Checkout
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 🎉 Check for Milestone Achievements
      id: check-milestone
      run: |
        python scripts/check_social_worthy.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 🐦 Tweet Achievement (optional)
      if: steps.check-milestone.outputs.should_tweet == 'true' && secrets.TWITTER_API_KEY
      run: |
        python scripts/tweet_achievement.py
      env:
        TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
        TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}

    - name: 📸 Update Profile README with Special Badge
      if: steps.check-milestone.outputs.special_badge == 'true'
      run: |
        python scripts/add_special_badge.py
        
        git config --local user.email "action@github.com"
        git config --local user.name "Codey Social 🐦"
        
        if [[ `git status --porcelain` ]]; then
          git add README.md
          git commit -m "🏆 Special achievement badge added!"
          git push
        fi
